{"version":3,"sources":["logo.svg","components/Navbar.js","components/About.js","components/Textform.js","components/alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","class","mode","to","type","id","className","onClick","toggleMode","style","height","width","cursor","About","myStyle","color","backgroundColor","border","h1_color","Textform","useState","text","setText","heading","rows","value","onChange","event","target","disabled","length","button_color","newText","toUpperCase","showAlert","toLowerCase","split","join","navigator","clipboard","writeText","document","getSelection","removeAllRanges","console","log","count","i","calcWordCount","filter","element","c","defaultProps","title","aboutText","Alert","msg","alert","role","slice","App","setMode","setAlert","btn_color","setBtnColor","setH1Color","message","setTimeout","cls","body","classList","remove","add","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1bf76547.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <>\r\n        {/* <nav classname=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div classname=\"container-fluid\">\r\n          <a classname=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button classname=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span classname=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div classname=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul classname=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li classname=\"nav-item\">\r\n                <a classname=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              <li classname=\"nav-item\">\r\n                <a classname=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n              </li>\r\n            </ul>\r\n            <form classname=\"d-flex\">\r\n              <input classname=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button classname=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav> */}\r\n     <nav class={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div class=\"container-fluid\">\r\n        <Link class=\"navbar-brand\" to=\"/\">TextUtils</Link>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li class=\"nav-item\">\r\n              <Link class=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <Link class=\"nav-link\" to=\"/about\">About</Link>\r\n            </li>\r\n          </ul>\r\n          <div className='d-flex'>\r\n              <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\r\n              <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\r\n              <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\r\n              <div className=\"bg-info rounded mx-2\" onClick={()=>{props.toggleMode('info')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\r\n              <div className=\"bg-secondary rounded mx-2\" onClick={()=>{props.toggleMode('secondary')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\r\n              <div className=\"bg-light rounded mx-2\" onClick={()=>{props.toggleMode('light')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\r\n              <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\r\n          </div>\r\n          {/* <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input class=\"form-check-input\" onClick = {()=>{props.toggleMode('primary')}} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">{props.value}</label>\r\n          </div> */}\r\n          {/* <form class=\"d-flex\">\r\n            <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button class=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n        </div>\r\n      </div>\r\n    </nav> \r\n      </>  \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About Text here\"\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    // const [myStyle, setMyStyle] =useState({\r\n    //     color: \"black\",\r\n    //     backgroundColor : \"white\"\r\n    // })\r\n   \r\n    let myStyle = {\r\n        color:props.mode ==='dark'?'white':'#042743',\r\n        backgroundColor:props.mode ==='dark' ?'rgb(36, 74, 104)':'white',\r\n        border:props.mode ==='dark'?\"0\": \"1px solid rgba(0,0,0,.125)\"\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='container'>\r\n            <h1 className='my-3' style={{color:props.h1_color}}>About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n                    <strong> Analyze Your text</strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    Textutils gives you a way to analyze your text quickly and efficiently. Be it word count,character count \r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\" style={myStyle}>\r\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}> \r\n                    <strong>Free to use</strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                    Textutils is a free character counter tool that provides instant charcter count & word count statistics for a given text. TextUtils reports the number of words and characters. Thus it is suitable for writing text with word/ character limit. \r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\" style={myStyle}> \r\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n                    <strong>Browser Compatible</strong>\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                   This word counter software works in any browsers such as Chrome, Firefox , Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essays, etc.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        {/* <div className='my-3'>\r\n            <button onClick={toggleStyle} className='btn btn-primary'>{btnText}</button>\r\n        </div> */}\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, {useState} from 'react';\r\n\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick= (event)=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\", \"success\")\r\n    }\r\n    const handledownClick= (event)=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\", \"success\")\r\n\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleclearClick = (event)=>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\")\r\n\r\n    }\r\n    const handleCopy =()=>{\r\n        navigator.clipboard.writeText(text);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied to Clipboard\", \"success\")\r\n\r\n    } \r\n    const handleExtraSpaces =()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Removed Extra Spaces\", \"success\")\r\n\r\n    }\r\n    const calcWordCount=(text)=>{\r\n        if(text.length===0)\r\n            return 0;\r\n        else\r\n        {\r\n            text = text.split(/\\s+/);\r\n            console.log(text);\r\n            let count = 0;\r\n            for(let i=0;i<text.length;i++){\r\n                if(text[i]!==\"\")\r\n                    count+=1;\r\n                \r\n            }\r\n            return count;\r\n            \r\n        }\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div  style = {{color: props.mode===\"dark\"?\"white\":\"black\"}} className='container'>\r\n            <h1 className='mb-4' style={{color:props.h1_color}}>{props.heading}</h1>\r\n            <div class=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"myBox\" style = {{color: props.mode===\"dark\"?\"white\":\"black\", backgroundColor: props.mode===\"dark\"?\"rgb(36, 74, 104)\":\"white\"}}rows=\"8\" value={text} onChange={handleOnChange}></textarea>\r\n            </div>\r\n                <button disabled = {text.length===0} className={`btn btn-${props.button_color} mx-1 my-1`} onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button disabled = {text.length===0} className={`btn btn-${props.button_color} mx-1 my-1`} onClick={handledownClick}>Convert to Lowercase</button>\r\n                <button disabled = {text.length===0} className={`btn btn-${props.button_color} mx-1 my-1`} onClick={handleclearClick}>Clear Text</button>\r\n                <button disabled = {text.length===0} className={`btn btn-${props.button_color} mx-1 my-1`} onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n                <button disabled = {text.length===0} className={`btn btn-${props.button_color} mx-1 my-1`} onClick={handleCopy}>Copy text</button>\r\n        </div>\r\n        <div className='container my-3' style = {{color: props.mode===\"dark\"?\"white\":\"black\"}}>\r\n            <h2 >Your text summary</h2>\r\n            <p >{calcWordCount(text)} words and {text.length} characters</p>\r\n            <p >{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2 >Preview</h2>\r\n            <p c>{text.length>0?text:\"Nothing to preview\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nfunction Alert(props){\r\n    const toUpCase = (msg)=>{\r\n        return msg.slice(0,1).toUpperCase()+msg.slice(1,msg.length);\r\n    }\r\n    \r\n    return(\r\n        <div style={{\r\n            height:\"50px\"\r\n        }}>\r\n        {props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{toUpCase(props.alert.type)}</strong>:{props.alert.msg}\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const[mode, setMode] = useState('light');\n  const[text,setText] = useState('Enable Toggle Mode');\n  const[alert, setAlert] = useState(null);\n  const[btn_color,setBtnColor] = useState('primary');\n  const[h1_color,setH1Color] = useState('black');\n\n  const showAlert=(message,type)=>{\n    setAlert({\n        msg:message,\n        type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500);\n  }\n\n  const removeBodyClasses = ()=>{\n    document.body.classList.remove('bg-primary');\n    document.body.classList.remove('bg-secondary');\n    document.body.classList.remove('bg-danger');\n    document.body.classList.remove('bg-success');\n    document.body.classList.remove('bg-warning');\n    document.body.classList.remove('bg-info');\n    document.body.classList.remove('bg-light');\n  }\n  const toggleMode =(cls)=>{\n    if(cls==='primary' || cls==='success' || cls==='info')\n    {\n        setBtnColor('danger');\n    }\n    else\n        setBtnColor('primary');\n        \n        removeBodyClasses();\n        document.body.classList.add('bg-'+cls);\n        if(mode==='light')\n        {\n          if(cls!=='light')\n            setH1Color('white');\n          else\n            setH1Color('black');\n          setMode('dark');\n          setText(\"Disable Toggle Mode\");\n          showAlert(\"Dark Mode has been enabled\",\"success\");\n          \n        }\n        else\n        {\n          setMode('light');\n          setText(\"Enable Toggle Mode\");\n          showAlert(\"Light Mode has been enabled\",\"success\");\n          setH1Color('black');\n          \n          \n          \n      // document.title = \"TextUtils- Home\";\n\n    }\n  }\n\n\n  return (\n    <>\n    <Router>\n        <Navbar title=\"TextUtils\" mode ={mode} toggleMode={toggleMode} value = {text}/>\n        <Alert alert = {alert}/>\n        <div className='container my-3'>\n            <Switch>\n              <Route exact path=\"/about\" >\n                <About mode={mode}/>\n              </Route>\n              <Route exact path=\"/\">\n                <Textform  showAlert = {showAlert} h1_color={h1_color} button_color = {btn_color} heading=\"Try TextUtils - Word Counter, Character Counter, Remove Extra Spaces\" mode={mode}/> \n              </Route>\n            </Switch>\n        </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}