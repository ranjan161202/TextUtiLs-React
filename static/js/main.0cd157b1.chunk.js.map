{"version":3,"sources":["logo.svg","components/Navbar.js","components/About.js","components/Textform.js","components/alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","class","mode","to","type","id","onClick","toggleMode","role","for","value","About","useState","color","backgroundColor","myStyle","setMyStyle","btnText","setBtnText","className","style","border","Textform","text","setText","heading","rows","onChange","event","target","newText","toUpperCase","showAlert","toLowerCase","split","join","document","getElementById","select","navigator","clipboard","writeText","length","console","log","count","i","calcWordCount","c","defaultProps","title","aboutText","Alert","msg","alert","slice","App","setMode","setAlert","message","setTimeout","body","Math","floor","random","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0cd157b1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <>\r\n        {/* <nav classname=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div classname=\"container-fluid\">\r\n          <a classname=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button classname=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span classname=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div classname=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul classname=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li classname=\"nav-item\">\r\n                <a classname=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              <li classname=\"nav-item\">\r\n                <a classname=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n              </li>\r\n            </ul>\r\n            <form classname=\"d-flex\">\r\n              <input classname=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button classname=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav> */}\r\n     <nav class={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div class=\"container-fluid\">\r\n        <Link class=\"navbar-brand\" to=\"/\">TextUtils</Link>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li class=\"nav-item\">\r\n              <Link class=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <Link class=\"nav-link\" to=\"/about\">About</Link>\r\n            </li>\r\n          </ul>\r\n          <div class={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input class=\"form-check-input\" onClick = {props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">{props.value}</label>\r\n          </div>\r\n          {/* <form class=\"d-flex\">\r\n            <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button class=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n        </div>\r\n      </div>\r\n    </nav> \r\n      </>  \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About Text here\"\r\n}\r\n\r\n","import React ,{useState}from 'react'\r\n\r\nexport default function About() {\r\n    const [myStyle, setMyStyle] =useState({\r\n        color: \"black\",\r\n        backgroundColor : \"white\"\r\n    })\r\n    \r\n    const[btnText, setBtnText] = useState(\"Enable Dark Mode\")\r\n    const toggleStyle = ()=>{\r\n        if(myStyle.backgroundColor === \"white\")\r\n        {\r\n            setMyStyle({color: 'white',\r\n            backgroundColor: 'black',\r\n            border: '1px solid white'})\r\n            setBtnText(\"Enable Light Mode\")\r\n\r\n        }\r\n        else{\r\n            setMyStyle({color: 'black',\r\n            backgroundColor: 'white'})\r\n            setBtnText(\"Enable Dark Mode\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className='container' style={myStyle}>\r\n            <h1 className='my-3'>About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n                    Accordion Item #1\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style={myStyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\" style={myStyle}>\r\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}> \r\n                    Accordion Item #2\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\" style={myStyle}> \r\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n                    Accordion Item #3\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-body\" style={myStyle}>\r\n                    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className='my-3'>\r\n            <button onClick={toggleStyle} className='btn btn-primary'>{btnText}</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, {useState} from 'react';\r\n\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleUpClick= (event)=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\", \"success\")\r\n    }\r\n    const handledownClick= (event)=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\", \"success\")\r\n\r\n    }\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleclearClick = (event)=>{\r\n        let newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\")\r\n\r\n    }\r\n    const handleCopy =()=>{\r\n        var text  = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Clipboard\", \"success\")\r\n\r\n    } \r\n    const handleExtraSpaces =()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Removed Extra Spaces\", \"success\")\r\n\r\n    }\r\n    const calcWordCount=(text)=>{\r\n        if(text.length===0)\r\n            return 0;\r\n        else\r\n        {\r\n            text = text.split(/[ ]+/);\r\n            console.log(text);\r\n            let count = 0;\r\n            for(let i=0;i<text.length;i++){\r\n                if(text[i]!==\"\")\r\n                    count+=1;\r\n            }\r\n            return count;\r\n            \r\n        }\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div  style = {{color: props.mode===\"dark\"?\"white\":\"black\"}} className='container'>\r\n            <h1>{props.heading}</h1>\r\n            <div class=\"mb-3\">\r\n                <textarea className=\"form-control\" id=\"myBox\" style = {{color: props.mode===\"dark\"?\"white\":\"black\", backgroundColor: props.mode===\"dark\"?\"grey\":\"white\"}}rows=\"8\" value={text} onChange={handleOnChange}></textarea>\r\n            </div>\r\n                <button className='btn btn-primary mx-1' onClick={handleUpClick}>Convert to Uppercase</button>\r\n                <button className='btn btn-primary mx-1' onClick={handledownClick}>Convert to Lowercase</button>\r\n                <button className='btn btn-primary my-1' onClick={handleclearClick}>Clear Text</button>\r\n                <button className='btn btn-primary mx-1' onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n                <button className='btn btn-primary mx-1' onClick={handleCopy}>Copy text</button>\r\n        </div>\r\n        <div className='container my-3' style = {{color: props.mode===\"dark\"?\"white\":\"black\"}}>\r\n            <h2 >Your text summary</h2>\r\n            <p >{calcWordCount(text)} words and {text.length} characters</p>\r\n            <p >{0.008 * text.split(\" \").length} Minutes read</p>\r\n            <h2 >Preview</h2>\r\n            <p c>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nfunction Alert(props){\r\n    const toUpCase = (msg)=>{\r\n        return msg.slice(0,1).toUpperCase()+msg.slice(1,msg.length);\r\n    }\r\n    \r\n    return(\r\n        props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{toUpCase(props.alert.type)}</strong>:{props.alert.msg}\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport Textform from './components/Textform';\nimport React, { useState } from 'react'\nimport Alert from './components/alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n  const[mode, setMode] = useState('light');\n  const[text,setText] = useState('Enable Dark Mode');\n  const[alert, setAlert] = useState(null);\n  \n  const showAlert=(message,type)=>{\n    setAlert({\n        msg:message,\n        type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },1500);\n  }\n\n  const toggleMode =()=>{\n    if(mode==='light')\n    {\n      setMode('dark');\n      setText(\"Enable Light Mode\");\n      let darkModes = [\"#4C0027\",\"#041C32\",\"#461111\",\"#3E065F\",\"#1E5128\",\"#2A0944\",\"#261C2C\",\"#2C061F\",\"#892CDC\",\"#042743\"]\n      document.body.style.backgroundColor  =darkModes[Math.floor(Math.random()*10)] ;\n      showAlert(\"Dark Mode has been enabled\",\"success\");\n      document.title = \"TextUtils- DarkMode\";\n      // setInterval(\n      //   ()=>{\n      //     document.title = \"TextUtils is Amazing\";\n      //   },2000\n      // );  \n      // setInterval(\n      //   ()=>{\n      //     document.title = \"Install TextUtils Now\";\n      //   },2000\n      // );\n    }\n      else\n    {\n      setMode('light');\n      setText(\"Enable Dark Mode\");\n      document.body.style.backgroundColor  = 'white' ; \n      showAlert(\"Light Mode has been enabled\",\"success\");\n      document.title = \"TextUtils- Home\";\n\n    }\n  }\n\n\n  return (\n    <>\n    <Router>\n        <Navbar title=\"TextUtils\" mode ={mode} toggleMode={toggleMode} value = {text}/>\n        <Alert alert = {alert}/>\n        <div className='container my-3'>\n            <Switch>\n              <Route exact path=\"/about\" >\n                <About />\n              </Route>\n              <Route exact path=\"/\">\n                <Textform  showAlert = {showAlert} heading=\"Enter the text to Analyze\" mode={mode}/> \n              </Route>\n            </Switch>\n        </div>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}